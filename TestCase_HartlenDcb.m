fclose all;
close all;
clear;
clc;

nResample = 200;
nCorrPts = 200;
smFact = 10;

xlimits = [0,40];
ylimits = [0,120];

%% Load and filter input curves
load('Data/DCB Force-Disp/Dcb_ForceDisp.mat')
for iCurve = 1:size(responseCurves,2)
    responseCurves(iCurve).data = [...
        smooth(responseCurves(iCurve).data(:,1),smFact),...
        smooth(responseCurves(iCurve).data(:,2),smFact)];
end

%% Generate Force-disp corridors without magnitude normalization
[charAvgNoNorm, innCorrNoNorm, outCorrNoNorm,proCurveDataNoNorm] = ...
    ARCGen_Ellipse(responseCurves,...
    'Diagnostics', 'off',...
    'nResamplePoints', nResample,...
    'NormalizeCurves', 'off',...
    'handleOutliers', 'off',...
    'CorridorRes',      nCorrPts,....
    'EllipseKFact',     1.0);

figure('Name','Force-Disp - No Normalization');
hold on;
for iPlot = 1:length(proCurveDataNoNorm)
    pExp = plot(proCurveDataNoNorm(iPlot).data(:,1),...
        proCurveDataNoNorm(iPlot).data(:,2),...
        'DisplayName','Exp.',...
        'LineWidth',1,'Color',0.7.*[1,1,1]);
end


pAvg = plot(charAvgNoNorm(:,1),charAvgNoNorm(:,2),'.-',...
    'DisplayName','Char. Avg. - ARCGen','MarkerSize',16,...
    'LineWidth',2.5,'Color',[0,0,0]);
pCorr = plot(innCorrNoNorm(:,1),innCorrNoNorm(:,2),'.-','MarkerSize',16,...
    'DisplayName','Corridors - ARCGen',...
    'LineWidth',2.0,'Color',[255, 213, 79]./255);
p = plot(outCorrNoNorm(:,1),outCorrNoNorm(:,2),'.-','MarkerSize',16,...
    'DisplayName','Outer',...
    'LineWidth',2.0,'Color',[196, 147, 0]./255);

legend([pExp,pAvg,pCorr], 'Location', 'Best')
xlim(xlimits)
ylim(ylimits)
grid on
xlabel('Deflection (mm)')
ylabel('Force (N)')

%% Generate Force-disp corridors with magnitude normalization
[charAvgNorm, innCorrNorm, outCorrNorm,proCurveDataNorm] = ...
    ARCGen_Ellipse(responseCurves,...
    'Diagnostics', 'off',...
    'nResamplePoints', nResample,...
    'NormalizeCurves', 'on',...
    'handleOutliers', 'off',...
    'CorridorRes',      nCorrPts,....
    'EllipseKFact',     1.0);

figure('Name','Force-Disp - Normalization');
hold on;
for iPlot = 1:length(proCurveDataNorm)
    pExp = plot(proCurveDataNorm(iPlot).data(:,1),...
        proCurveDataNorm(iPlot).data(:,2),...
        'DisplayName','Exp.',...
        'LineWidth',1,'Color',0.7.*[1,1,1]);
end

pAvg = plot(charAvgNorm(:,1),charAvgNorm(:,2),'.-',...
    'DisplayName','Char. Avg. - ARCGen','MarkerSize',16,...
    'LineWidth',2.5,'Color',[0,0,0]);
pCorr = plot(innCorrNorm(:,1),innCorrNorm(:,2),'.-','MarkerSize',16,...
    'DisplayName','Corridors - ARCGen',...
    'LineWidth',2.0,'Color',[255, 213, 79]./255);
p = plot(outCorrNorm(:,1),outCorrNorm(:,2),'.-','MarkerSize',16,...
    'DisplayName','Outer',...
    'LineWidth',2.0,'Color',[196, 147, 0]./255);

legend([pExp,pAvg,pCorr], 'Location', 'Best')
xlim(xlimits)
ylim(ylimits)
grid on
xlabel('Deflection (mm)')
ylabel('Force (N)')

%% Generate Force-disp corridors Remove Extaneous
% Load data
[charAvgRemove, innCorrRemove, outCorrRemove,proCurveDataRemove] = ...
    ARCGen_Ellipse(responseCurves,...
    'Diagnostics',     'off',...
    'nResamplePoints', nResample,...
    'NormalizeCurves', 'on',...
    'handleOutliers',  'RemoveExtraneous',...
    'DeviationFact',   2,...
    'CorridorRes',      nCorrPts,....
    'EllipseKFact',     1.0);

figure('Name','Force-Disp - Removed Extraneous');
hold on;
for iPlot = 1:length(proCurveDataRemove)
    pExp = plot(proCurveDataRemove(iPlot).data(:,1),...
        proCurveDataRemove(iPlot).data(:,2),...
        'DisplayName','Exp.',...
        'LineWidth',1,'Color',0.7.*[1,1,1]);
end

pAvg = plot(charAvgRemove(:,1),charAvgRemove(:,2),'.-',...
    'DisplayName','Char. Avg. - ARCGen','MarkerSize',16,...
    'LineWidth',2.5,'Color',[0,0,0]);
pCorr = plot(innCorrRemove(:,1),innCorrRemove(:,2),'.-','MarkerSize',16,...
    'DisplayName','Corridors - ARCGen',...
    'LineWidth',2.0,'Color',[255, 213, 79]./255);
p = plot(outCorrRemove(:,1),outCorrRemove(:,2),'.-','MarkerSize',16,...
    'DisplayName','Outer',...
    'LineWidth',2.0,'Color',[196, 147, 0]./255);

legend([pExp,pAvg,pCorr], 'Location', 'Best')
xlim(xlimits)
ylim(ylimits)
grid on
xlabel('Deflection (mm)')
ylabel('Force (N)')

%% Generate Force-disp corridors crop to deviation factor
% Load data
[charAvgLongCrop, innCorrLongCrop, outCorrLongCrop,proCurveDataLongCrop] = ...
    ARCGen_Ellipse(responseCurves,...
    'Diagnostics',     'off',...
    'nResamplePoints', nResample,...
    'NormalizeCurves', 'on',...
    'handleOutliers',  'CropToDeviationFactor',...
    'DeviationFact',   1,...
    'CorridorRes',      nCorrPts,....
    'EllipseKFact',     1.0);

figure('Name','Force-Disp - Deviation Factor Crop');
hold on;
for iPlot = 1:length(proCurveDataLongCrop)
    pExp = plot(proCurveDataLongCrop(iPlot).data(:,1),...
        proCurveDataLongCrop(iPlot).data(:,2),...
        'DisplayName','Exp.',...
        'LineWidth',1,'Color',0.7.*[1,1,1]);
end

pAvg = plot(charAvgLongCrop(:,1),charAvgLongCrop(:,2),'.-',...
    'DisplayName','Char. Avg. - ARCGen','MarkerSize',16,...
    'LineWidth',2.5,'Color',[0,0,0]);
pCorr = plot(innCorrLongCrop(:,1),innCorrLongCrop(:,2),'.-','MarkerSize',16,...
    'DisplayName','Corridors - ARCGen',...
    'LineWidth',2.0,'Color',[255, 213, 79]./255);
p = plot(outCorrLongCrop(:,1),outCorrLongCrop(:,2),'.-','MarkerSize',16,...
    'DisplayName','Outer',...
    'LineWidth',2.0,'Color',[196, 147, 0]./255);

legend([pExp,pAvg,pCorr], 'Location', 'Best')
xlim(xlimits)
ylim(ylimits)
grid on
xlabel('Deflection (mm)')
ylabel('Force (N)')

%% Load and filter input curves
clear responseCurves
smFact = 20
load('Data/DCB Force-Disp/Dcb_rCurves.mat')
for iCurve = 1:size(responseCurves,2)
    responseCurves(iCurve).data = [...
        smooth(responseCurves(iCurve).data(:,1),smFact),...
        smooth(responseCurves(iCurve).data(:,2),smFact)];
end

%% Generate R-Curve corridors without magnitude normalization
xlimits = [0,75];
ylimits = [0,1.2];

[charAvgNoNorm, innCorrNoNorm, outCorrNoNorm,proCurveDataNoNorm] = ...
    ARCGen_Ellipse(responseCurves,...
    'Diagnostics', 'off',...
    'nResamplePoints', nResample,...
    'NormalizeCurves', 'off',...
    'handleOutliers', 'off',...
    'CorridorRes',      nCorrPts,....
    'EllipseKFact',     1.0);

figure('Name','R-Curve - No Normalization');
hold on;
for iPlot = 1:length(proCurveDataNoNorm)
    pExp = plot(proCurveDataNoNorm(iPlot).data(:,1),...
        proCurveDataNoNorm(iPlot).data(:,2),...
        'DisplayName','Exp.',...
        'LineWidth',1,'Color',0.7.*[1,1,1]);
end

pAvg = plot(charAvgNoNorm(:,1),charAvgNoNorm(:,2),'.-',...
    'DisplayName','Char. Avg. - ARCGen','MarkerSize',16,...
    'LineWidth',2.5,'Color',[0,0,0]);
pCorr = plot(innCorrNoNorm(:,1),innCorrNoNorm(:,2),'.-','MarkerSize',16,...
    'DisplayName','Corridors - ARCGen',...
    'LineWidth',2.0,'Color',[255, 213, 79]./255);
p = plot(outCorrNoNorm(:,1),outCorrNoNorm(:,2),'.-','MarkerSize',16,...
    'DisplayName','Outer',...
    'LineWidth',2.0,'Color',[196, 147, 0]./255);

legend([pExp,pAvg,pCorr], 'Location', 'Best')
xlim(xlimits)
ylim(ylimits)
grid on
xlabel('Deflection (mm)')
ylabel('Force (N)')

%% Generate R-Curve corridors with magnitude normalization
[charAvgNorm, innCorrNorm, outCorrNorm,proCurveDataNorm] = ...
    ARCGen_Ellipse(responseCurves,...
    'Diagnostics', 'off',...
    'nResamplePoints', nResample,...
    'NormalizeCurves', 'on',...
    'handleOutliers', 'off',...
    'CorridorRes',      nCorrPts,....
    'EllipseKFact',     1.0);

figure('Name','R-Curve - Normalization');
hold on;
for iPlot = 1:length(proCurveDataNorm)
    pExp = plot(proCurveDataNorm(iPlot).data(:,1),...
        proCurveDataNorm(iPlot).data(:,2),...
        'DisplayName','Exp.',...
        'LineWidth',1,'Color',0.7.*[1,1,1]);
end

pAvg = plot(charAvgNorm(:,1),charAvgNorm(:,2),'.-',...
    'DisplayName','Char. Avg. - ARCGen','MarkerSize',16,...
    'LineWidth',2.5,'Color',[0,0,0]);
pCorr = plot(innCorrNorm(:,1),innCorrNorm(:,2),'.-','MarkerSize',16,...
    'DisplayName','Corridors - ARCGen',...
    'LineWidth',2.0,'Color',[255, 213, 79]./255);
p = plot(outCorrNorm(:,1),outCorrNorm(:,2),'.-','MarkerSize',16,...
    'DisplayName','Outer',...
    'LineWidth',2.0,'Color',[196, 147, 0]./255);

legend([pExp,pAvg,pCorr], 'Location', 'Best')
xlim(xlimits)
ylim(ylimits)
grid on
xlabel('Deflection (mm)')
ylabel('Force (N)')

%% Generate R-Curve corridors Remove Extaneous
[charAvgRemove, innCorrRemove, outCorrRemove,proCurveDataRemove] = ...
    ARCGen_Ellipse(responseCurves,...
    'Diagnostics',     'off',...
    'nResamplePoints', nResample,...
    'NormalizeCurves', 'on',...
    'handleOutliers',  'RemoveExtraneous',...
    'DeviationFact',   2,...
    'CorridorRes',      nCorrPts,....
    'EllipseKFact',     1.0);

figure('Name','R-Curve - Removed Extraneous');
hold on;
for iPlot = 1:length(proCurveDataRemove)
    pExp = plot(proCurveDataRemove(iPlot).data(:,1),...
        proCurveDataRemove(iPlot).data(:,2),...
        'DisplayName','Exp.',...
        'LineWidth',1,'Color',0.7.*[1,1,1]);
end

pAvg = plot(charAvgRemove(:,1),charAvgRemove(:,2),'.-',...
    'DisplayName','Char. Avg. - ARCGen','MarkerSize',16,...
    'LineWidth',2.5,'Color',[0,0,0]);
pCorr = plot(innCorrRemove(:,1),innCorrRemove(:,2),'.-','MarkerSize',16,...
    'DisplayName','Corridors - ARCGen',...
    'LineWidth',2.0,'Color',[255, 213, 79]./255);
p = plot(outCorrRemove(:,1),outCorrRemove(:,2),'.-','MarkerSize',16,...
    'DisplayName','Outer',...
    'LineWidth',2.0,'Color',[196, 147, 0]./255);

legend([pExp,pAvg,pCorr], 'Location', 'Best')
xlim(xlimits)
ylim(ylimits)
grid on
xlabel('Deflection (mm)')
ylabel('Force (N)')

%% Generate R-Curve corridors crop to deviation factor
[charAvgLongCrop, innCorrLongCrop, outCorrLongCrop,proCurveDataLongCrop] = ...
    ARCGen_Ellipse(responseCurves,...
    'Diagnostics',     'off',...
    'nResamplePoints', nResample,...
    'NormalizeCurves', 'on',...
    'handleOutliers',  'CropToDeviationFactor',...
    'DeviationFact',   0.75,...
    'CorridorRes',      nCorrPts,....
    'EllipseKFact',     1.0);

figure('Name','R-Curve - Crop Long Curves');
hold on;
for iPlot = 1:length(proCurveDataRemove)
    pExp = plot(proCurveDataRemove(iPlot).data(:,1),...
        proCurveDataRemove(iPlot).data(:,2),...
        'DisplayName','Exp.',...
        'LineWidth',1,'Color',0.7.*[1,1,1]);
end

pAvg = plot(charAvgLongCrop(:,1),charAvgLongCrop(:,2),'.-',...
    'DisplayName','Char. Avg. - ARCGen','MarkerSize',16,...
    'LineWidth',2.5,'Color',[0,0,0]);
pCorr = plot(innCorrLongCrop(:,1),innCorrLongCrop(:,2),'.-','MarkerSize',16,...
    'DisplayName','Corridors - ARCGen',...
    'LineWidth',2.0,'Color',[255, 213, 79]./255);
p = plot(outCorrLongCrop(:,1),outCorrLongCrop(:,2),'.-','MarkerSize',16,...
    'DisplayName','Outer',...
    'LineWidth',2.0,'Color',[196, 147, 0]./255);

legend([pExp,pAvg,pCorr], 'Location', 'Best')
xlim(xlimits)
ylim(ylimits)
grid on
xlabel('Deflection (mm)')
ylabel('Force (N)')

%% Generate R-Curve corridors using weighted average
[charAvgWghtAvg, innCorrWghtAvg, outCorrWghtAvg,proCurveDataWghtAvg] = ...
    ARCGen_Ellipse(responseCurves,...
    'Diagnostics',     'off',...
    'nResamplePoints', nResample,...
    'NormalizeCurves', 'on',...
    'handleOutliers',  'WeightedAverage',...
    'DeviationFact',   2,...
    'CorridorRes',      nCorrPts,....
    'EllipseKFact',     1.0);

figure('Name','R-Curve - Weighted Average');
hold on;
for iPlot = 1:length(proCurveDataWghtAvg)
    pExp = plot(proCurveDataWghtAvg(iPlot).data(:,1),...
        proCurveDataWghtAvg(iPlot).data(:,2),...
        'DisplayName','Exp.',...
        'LineWidth',1,'Color',0.7.*[1,1,1]);
end

pAvg = plot(charAvgWghtAvg(:,1),charAvgWghtAvg(:,2),'.-',...
    'DisplayName','Char. Avg. - ARCGen','MarkerSize',16,...
    'LineWidth',2.5,'Color',[0,0,0]);
pCorr = plot(innCorrWghtAvg(:,1),innCorrWghtAvg(:,2),'.-','MarkerSize',16,...
    'DisplayName','Corridors - ARCGen',...
    'LineWidth',2.0,'Color',[255, 213, 79]./255);
p = plot(outCorrWghtAvg(:,1),outCorrWghtAvg(:,2),'.-','MarkerSize',16,...
    'DisplayName','Outer',...
    'LineWidth',2.0,'Color',[196, 147, 0]./255);

legend([pExp,pAvg,pCorr], 'Location', 'Best')
xlim(xlimits)
ylim(ylimits)
grid on
xlabel('Deflection (mm)')
ylabel('Force (N)')